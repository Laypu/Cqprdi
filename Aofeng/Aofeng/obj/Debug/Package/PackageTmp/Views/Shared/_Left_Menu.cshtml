
@using Oaww.Entity;
@using Oaww.HtmlHelp;
@using Oaww.Entity;
@{
    Layout = null;
    List<Menu> TopMenu = (List<Menu>)ViewBag.AllMenu;

    string mid = (string)ViewBag.mid;

    Menu menu = TopMenu.Where(t => t.ID.ToString() == mid).FirstOrDefault(); //先找到level

    //由上方/下方Menu來的
    if (menu == null)
    {
        List<Menu> DownMenu = (List<Menu>)ViewBag.DownMenu;
        menu = DownMenu.Where(t => t.ID.ToString() == mid).FirstOrDefault(); //先找到level
        if (menu != null)
        {
            menu = TopMenu.Where(t => t.ModelID == menu.ModelID && t.ModelItemID == menu.ModelItemID).FirstOrDefault();
        }
        else
        {
            List<Menu> UpMenu = (List<Menu>)ViewBag.UpMenu;
            menu = UpMenu.Where(t => t.ID.ToString() == mid).FirstOrDefault(); //先找到level
            if (menu != null)
            {
                menu = TopMenu.Where(t => t.ModelID == menu.ModelID && t.ModelItemID == menu.ModelItemID).FirstOrDefault();
            }
        }

    }

    int menuLevel = menu == null ? 1 : menu.MenuLevel;

    //再找到1stMenu
    Menu Menu1st = new Menu();

    if (menuLevel == 1)
    {
        Menu1st = menu;
    }
    else if (menuLevel == 2)
    {
        Menu1st = TopMenu.Where(t => t.ID == menu.ParentID).First();
    }
    else if (menuLevel == 3)
    {
        Menu menu2nd = TopMenu.Where(t => t.ID == menu.ParentID).First();
        Menu1st = TopMenu.Where(t => t.ID == menu2nd.ParentID).First();
    }
}

@if (TopMenu.Where(t => t.MenuLevel == 2 && t.ParentID == Menu1st.ID).Count() > 0)
{
    <div id="left_block">
        <div class="left_menu">
            <ul>
                @if (TopMenu.Where(t => t.MenuLevel == 2 && t.ParentID == Menu1st.ID).Count() > 0)
                {
                    foreach (Menu Menu2nd in TopMenu.Where(t => t.MenuLevel == 2 && t.ParentID == Menu1st.ID).OrderBy(t => t.Sort))
                    {
                        bool is3rd = TopMenu.Where(t => t.MenuLevel == 3 && t.ParentID == Menu2nd.ID).Count() > 0;
                        bool isOpen = TopMenu.Where(t => t.MenuLevel == 3 && t.ParentID == Menu2nd.ID).Contains(menu);
                        if (is3rd)
                        {
                            <li class="left_submenuhead @(isOpen?"on":"")">
                                @Html.aira_HyperLink_Menu(Menu2nd, "<b>" + Menu2nd.MenuName + "</b>", Menu2nd.MenuName, new { @class = ((Menu2nd.ID.ToString() == mid || isOpen) ? "cur" : "") })
                                <ul class="left_submenu">
                                    @foreach (Menu Menu3rd in TopMenu.Where(t => t.MenuLevel == 3 && t.ParentID == Menu2nd.ID).OrderBy(t => t.Sort))
                                    {
                                        if (Menu3rd.ID.ToString() == mid)
                                        {
                                            <li>@Html.aira_HyperLink_Menu(Menu3rd, Menu3rd.MenuName, "", new { @class = "cur" })</li>
                                        }
                                        else
                                        {
                                            <li>@Html.aira_HyperLink_Menu(Menu3rd, Menu3rd.MenuName, "")</li>
                                        }
                                    }
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li>
                                @Html.aira_HyperLink_Menu(Menu2nd, "<b>" + Menu2nd.MenuName + "</b>", Menu2nd.MenuName, new { @class = (Menu2nd.ID.ToString() == mid ? "cur" : "") })
                            </li>
                        }
                    }

                }
            </ul>
        </div>

    </div>
}

